// <auto-generated />
using MeuConvite.Modelo.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeuConvite.Modelo.Migrations
{
    [DbContext(typeof(MeuConviteContexto))]
    [Migration("20190204114640_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeuConvite.Definicao.Entidade.Configuracao", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Chave")
                        .HasMaxLength(256);

                    b.Property<string>("Descricao")
                        .HasMaxLength(256);

                    b.Property<string>("Secao")
                        .HasMaxLength(256);

                    b.Property<string>("Valor")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Configuracao");
                });

            modelBuilder.Entity("MeuConvite.Definicao.Entidade.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("Nome")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("MeuConvite.Definicao.Entidade.Convidado", b =>
                {
                    b.Property<int>("ConviteId");

                    b.Property<int>("ContatoId");

                    b.Property<int>("PresenteId");

                    b.Property<int>("Situacao");

                    b.HasKey("ConviteId", "ContatoId");

                    b.HasIndex("ContatoId");

                    b.HasIndex("PresenteId");

                    b.ToTable("Convidado");
                });

            modelBuilder.Entity("MeuConvite.Definicao.Entidade.Convite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mensagem")
                        .HasColumnType("text")
                        .HasMaxLength(256);

                    b.Property<string>("Titulo")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Convite");
                });

            modelBuilder.Entity("MeuConvite.Definicao.Entidade.Presente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EhNecessario");

                    b.Property<string>("Titulo")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Presente");
                });

            modelBuilder.Entity("MeuConvite.Definicao.Entidade.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Usuario")
                        .HasMaxLength(256);

                    b.Property<string>("Senha")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("MeuConvite.Definicao.Entidade.Convidado", b =>
                {
                    b.HasOne("MeuConvite.Definicao.Entidade.Contato", "Contato")
                        .WithMany("Convidados")
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MeuConvite.Definicao.Entidade.Convite", "Convite")
                        .WithMany("Convidados")
                        .HasForeignKey("ConviteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MeuConvite.Definicao.Entidade.Presente", "Sugestao")
                        .WithMany()
                        .HasForeignKey("PresenteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
